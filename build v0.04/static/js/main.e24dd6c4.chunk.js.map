{"version":3,"sources":["components/Search.js","components/AssuntoFilter.js","components/DictAssuntoFilter.js","Force.js","App.js","reportWebVitals.js","index.js"],"names":["styles","container","borderRadius","background","width","padding","height","position","zIndex","top","left","Seacrh","props","style","Autocomplete","id","options","nodes","getOptionLabel","option","onInputChange","event","newInputValue","node","filter","distRatio","Math","hypot","x","y","z","graphRef","current","cameraPosition","renderInput","params","TextField","label","variant","AssuntoFilter","assuntos","applyFilter","multiple","size","limitTags","onChange","selectedValues","placeholder","right","Force","useRef","useState","setNodes","links","setLinks","secureLinks","setSecureLinks","secureNodes","setSecureNodes","filteredTemp","setFilteredTemp","dataShouldBeUpdated","setDataShouldBeUpdated","assuntoFilter","setAssuntoFilter","dictAssuntoFilter","setDictAssuntoFilter","openFilteredResults","setOpenFilteredResults","useEffect","fetch","then","data","json","console","log","filteredNodes","filteredLinks","length","includes","ASSUNTO","link","map","source","target","Set","concat","apply","DICIONARIO","column","assunto","some","n","handleNodeClick","className","ref","graphData","nodeLabel","linkLabel","protocolo","nodeAutoColorBy","onNodeClick","linkDirectionalParticles","linkDirectionalParticleWidth","overflow","onClick","cursor","marginBottom","renderFilteredResults","bottom","button","color","dsplay","alignItems","justifyContent","fontWeigth","margin","renderFilterButtons","value","App","graphType","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAIMA,EAAS,CACXC,UAAW,CAACC,aAAc,OAAQC,WAAY,UAAWC,MAAO,cAAeC,QAAS,OAAQC,OAAQ,cAAeC,SAAU,WAAYC,OAAQ,IAAKC,IAAK,OAAQC,KAAM,SAGlK,SAASC,EAAOC,GAC3B,OAAO,qBAAKC,MAAOb,EAAOC,UAAnB,SACH,cAACa,EAAA,EAAD,CACIC,GAAG,iBACHC,QAASJ,EAAMK,MACfC,eAAgB,SAACC,GAAD,OAAYA,EAAOJ,IACnCK,cAAe,SAACC,EAAOC,GACnB,IAAMC,EAAOX,EAAMK,MAAMO,QAAO,SAACD,GAAD,OAAUA,EAAKR,KAAOO,KAGhDG,EAAY,EADD,GACcC,KAAKC,MAAMJ,EAAK,GAAGK,EAAGL,EAAK,GAAGM,EAAGN,EAAK,GAAGO,GAExElB,EAAMmB,SAASC,QAAQC,eACnB,CAAEL,EAAGL,EAAK,GAAGK,EAAIH,EAAWI,EAAGN,EAAK,GAAGM,EAAIJ,EAAWK,EAAGP,EAAK,GAAGO,EAAIL,GACrEF,EAAK,GACL,MAGRV,MAAO,CAAET,MAAO,KAChB8B,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,MAAM,aAAaC,QAAQ,mBCvBvF,IAAMtC,EAAS,CACXC,UAAW,CAACC,aAAc,OAAQC,WAAY,UAAWC,MAAO,cAAeC,QAAS,OAAQC,OAAQ,cAAeC,SAAU,WAAYC,OAAQ,IAAKC,IAAK,QAASC,KAAM,SAGnK,SAAS6B,EAAT,GAAiD,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,YAC7C,OAAO,qBAAK5B,MAAOb,EAAOC,UAAnB,SACH,cAACa,EAAA,EAAD,CACI4B,UAAQ,EACRC,KAAK,QACLC,UAAW,EACX7B,GAAG,sBACHC,QAASwB,EACT3B,MAAO,CAAET,MAAO,KAChBc,eAAgB,SAACC,GAAD,OAAYA,GAC5B0B,SAAU,SAACxB,EAAOyB,GACdL,EAAYK,IAEhBZ,YAAa,SAACC,GAAD,OACT,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBG,QAAQ,WAAWD,MAAM,uBAAuBU,YAAY,mBClBnG,IAAM/C,EAAS,CACXC,UAAW,CAACC,aAAc,OAAQC,WAAY,UAAWC,MAAO,cAAeC,QAAS,OAAQC,OAAQ,cAAeC,SAAU,WAAYC,OAAQ,IAAKC,IAAK,QAASuC,MAAO,SAGpK,SAAST,EAAT,GAAiD,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,YAC7C,OAAO,qBAAK5B,MAAOb,EAAOC,UAAnB,SACH,cAACa,EAAA,EAAD,CACI4B,UAAQ,EACRC,KAAK,QACLC,UAAW,EACX7B,GAAG,sBACHC,QAASwB,EACT3B,MAAO,CAAET,MAAO,KAChBc,eAAgB,SAACC,GAAD,OAAYA,GAC5B0B,SAAU,SAACxB,EAAOyB,GACdL,EAAYK,IAEhBZ,YAAa,SAACC,GAAD,OACT,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBG,QAAQ,WAAWD,MAAM,uBAAuBU,YAAY,mBC6HpFE,MA5If,WACI,IAAMlB,EAAWmB,iBAAO,MADX,EAEaC,mBAAS,IAFtB,mBAENlC,EAFM,KAECmC,EAFD,OAGaD,mBAAS,IAHtB,mBAGNE,EAHM,KAGCC,EAHD,OAKyBH,mBAAS,IALlC,mBAKNI,EALM,KAKOC,EALP,OAMyBL,mBAAS,IANlC,mBAMNM,EANM,KAMOC,EANP,OAQ2BP,mBAAS,IARpC,mBAQNQ,EARM,KAQQC,EARR,OAUyCT,oBAAS,GAVlD,mBAUNU,EAVM,KAUeC,EAVf,OAW6BX,mBAAS,IAXtC,mBAWNY,EAXM,KAWSC,EAXT,OAYqCb,mBAAS,IAZ9C,mBAYNc,EAZM,KAYaC,EAZb,OAcyCf,oBAAS,GAdlD,mBAcNgB,EAdM,KAceC,EAdf,KAiBbC,qBAAU,WACNC,MACA,cAECC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACE,GACHnB,EAASmB,GACTjB,EAAeiB,KAChB,IAEHH,MACA,cAECC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACE,GACHrB,EAASqB,GACTf,EAAee,QAEpB,IAEHC,QAAQC,IAAI1D,GACZyD,QAAQC,IAAItB,GAEZgB,qBAAU,WACN,IAAIO,EACAC,EAEDd,EAAce,OAAS,GACtBF,EAAgBnB,EAAYjC,QAAO,SAAAD,GAAI,OAAIwC,EAAcgB,SAASxD,EAAKyD,YACvEH,EAAgBtB,EAAY/B,QAAO,SAAAyD,GAAI,OAAI,YAAIL,EAAcM,KAAI,SAAA3D,GAAI,OAAIA,EAAKR,OAAKgE,SAASE,EAAKE,OAAOpE,KAAO,YAAI6D,EAAcM,KAAI,SAAA3D,GAAI,OAAIA,EAAKR,OAAKgE,SAASE,EAAKG,OAAOrE,SAE5K8D,EAAgBtB,EAChBqB,EAAgBnB,GAGjBQ,EAAkBa,OAAS,IAC1BF,EAAgBA,EAAcpD,QAAO,SAAAD,GAAI,OAAI,YAAI,IAAI8D,IAAI,GAAGC,OAAOC,MAAM,GAAhB,YAAwBhE,EAAKiE,WAAWN,KAAI,SAAAO,GAAM,OAAIA,EAAOC,eAAaC,MAAK,SAAAC,GAAC,OAAI3B,EAAkBc,SAASa,SACxKf,EAAgBA,EAAcrD,QAAO,SAAAyD,GAAI,OAAI,YAAIL,EAAcM,KAAI,SAAA3D,GAAI,OAAIA,EAAKR,OAAKgE,SAASE,EAAKE,OAAOpE,KAAO,YAAI6D,EAAcM,KAAI,SAAA3D,GAAI,OAAIA,EAAKR,OAAKgE,SAASE,EAAKG,OAAOrE,QAIlL6C,EAAgB,CAAC3C,MAAO2D,EAAevB,MAAOwB,IAC9CT,GAAuB,GACvBN,GAAuB,KACxB,CAACD,IA2CJ,IAAMgC,EAAkB,SAACtE,GACrB,IACME,EAAY,EADD,GACgBC,KAAKC,MAAMJ,EAAKK,EAAGL,EAAKM,EAAGN,EAAKO,GAEjEC,EAASC,QAAQC,eACb,CACAL,EAAGL,EAAKK,EAAIH,EACZI,EAAGN,EAAKM,EAAIJ,EACZK,EAAGP,EAAKO,EAAIL,GAEZF,EACA,MAIR,OACI,sBAAKuE,UAAU,QAAf,UACI,cAAC,IAAD,CACIC,IAAKhE,EACLiE,UAAW,CAAE/E,MAAOA,EAAOoC,MAAOA,GAClC4C,UAAW,KACXC,UAAW,SAACjB,GAAD,gBAAaA,EAAKkB,YAC7BC,gBAAiB,aACjBC,YAAcR,EACdS,yBAA0B,EAC1BC,6BAA8B,IAEjCpC,GAzDqB,SAAC,GAAoB,IAAnBlD,EAAkB,EAAlBA,MAAkB,EAAXoC,MAKnC,OAAQ,mCACJ,qBAAKxC,MAJM,CAAC2F,SAAU,OAAOtG,aAAc,OAAQC,WAAY,UAAWC,MAAO,QAASC,QAAS,OAAQC,OAAQ,QAASC,SAAU,WAAYC,OAAQ,IAAKC,IAAK,QAASC,KAAM,QAInL,SACKO,EAAMiE,KAAI,SAAA3D,GAAI,OAAI,qBAAKkF,QAAS,kBAAMZ,EAAgBtE,IAAOV,MAAO,CAAC6F,OAAQ,UAAWC,aAAc,OAApF,SAA6FpF,EAAKR,YAkDjG6F,CAAsBjD,GAC7CQ,GA7CT,YAA8C,IAAhBlD,EAAe,EAAfA,MAAOoC,EAAQ,EAARA,MAC3BrD,EAAS,CACXC,UAAW,CAACM,SAAU,WAAYH,MAAO,cAAeM,KAAM,OAAQmG,OAAQ,SAC9EC,OAAQ,CAACJ,OAAQ,UAAWvG,WAAY,MAAO4G,MAAO,OAAQ1G,QAAS,OAAQD,MAAO,cAAe4G,OAAQ,OAAQC,WAAY,SAAUC,eAAgB,SAAUC,WAAY,OAAQjH,aAAc,OAAQkH,OAAQ,cAE3N,OAAO,sBAAKvG,MAAOb,EAAOC,UAAnB,UACH,qBAAKY,MAAOb,EAAO8G,OAAQL,QAAS,WAChCrD,EAASnC,GACTqC,EAASD,IAFb,6BAIA,qBAAKxC,MAAOb,EAAO8G,OAAQL,QAAS,WAChCrD,EAASK,GACTH,EAASC,IAFb,yBAmCwB8D,CAAoB1D,GAC5C,cAACpB,EAAD,CAAeC,SAAQ,YAAM,IAAI6C,IAAI5B,EAAYyB,KAAI,SAAA3D,GAAI,OAAIA,EAAKyD,aAAYvC,YAtE1D,SAAC6E,GACzBtD,EAAiBsD,GACjBxD,GAAuB,MAqEnB,cAAC,EAAD,CAAmBtB,SAAU,CAAC,eAAgB,gBAAiB,YAAa,QAAS,WAAYC,YAlEzE,SAAC6E,GAC7BpD,EAAqBoD,GACrBxD,GAAuB,MAiElB/B,EAASC,SAAW,cAAC,EAAD,CAAQf,MAAOA,EAAOc,SAAUA,QCnIlDwF,MARf,WACE,OACE,qBAAKzB,UAAU,MAAf,SACE,cAAC,EAAD,CAAO0B,UAAW,UCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpD,MAAK,YAAkD,IAA/CqD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,EAAgB/C,QAAQC,M","file":"static/js/main.e24dd6c4.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst styles = {\r\n    container: {borderRadius: '10px', background: '#F2F2F2', width: 'fit-content', padding: '15px', height: 'fit-content', position: 'absolute', zIndex: '1', top: '20px', left: '20px'},\r\n}\r\n\r\nexport default function Seacrh(props) {\r\n    return <div style={styles.container}>\r\n        <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={props.nodes}\r\n            getOptionLabel={(option) => option.id}\r\n            onInputChange={(event, newInputValue) => {\r\n                const node = props.nodes.filter((node) => node.id === newInputValue)\r\n\r\n                const distance = 40;\r\n                const distRatio = 1 + distance/Math.hypot(node[0].x, node[0].y, node[0].z);\r\n                \r\n                props.graphRef.current.cameraPosition(\r\n                    { x: node[0].x * distRatio, y: node[0].y * distRatio, z: node[0].z * distRatio }, // new position\r\n                    node[0], // lookAt ({ x, y, z })\r\n                    3000  // ms transition duration\r\n                );\r\n            }}\r\n            style={{ width: 300 }}\r\n            renderInput={(params) => <TextField {...params} label=\"ID da base\" variant=\"outlined\" />}\r\n        />\r\n    </div>\r\n}   ","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = {\r\n    container: {borderRadius: '10px', background: '#F2F2F2', width: 'max-content', padding: '15px', height: 'fit-content', position: 'absolute', zIndex: '1', top: '130px', left: '20px'},\r\n}\r\n\r\nexport default function AssuntoFilter({assuntos, applyFilter}) {\r\n    return <div style={styles.container}>\r\n        <Autocomplete\r\n            multiple\r\n            size='small'\r\n            limitTags={2}\r\n            id=\"multiple-limit-tags\"\r\n            options={assuntos}\r\n            style={{ width: 300 }}\r\n            getOptionLabel={(option) => option}\r\n            onChange={(event, selectedValues) => {\r\n                applyFilter(selectedValues)\r\n            }}\r\n            renderInput={(params) => (\r\n                <TextField {...params} variant=\"outlined\" label=\"Slecione os assuntos\" placeholder=\"assuntos\" />\r\n            )}\r\n        />\r\n    </div>\r\n}","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = {\r\n    container: {borderRadius: '10px', background: '#F2F2F2', width: 'max-content', padding: '15px', height: 'fit-content', position: 'absolute', zIndex: '1', top: '130px', right: '20px'},\r\n}\r\n\r\nexport default function AssuntoFilter({assuntos, applyFilter}) {\r\n    return <div style={styles.container}>\r\n        <Autocomplete\r\n            multiple\r\n            size='small'\r\n            limitTags={2}\r\n            id=\"multiple-limit-tags\"\r\n            options={assuntos}\r\n            style={{ width: 300 }}\r\n            getOptionLabel={(option) => option}\r\n            onChange={(event, selectedValues) => {\r\n                applyFilter(selectedValues)\r\n            }}\r\n            renderInput={(params) => (\r\n                <TextField {...params} variant=\"outlined\" label=\"Slecione os assuntos\" placeholder=\"assuntos\" />\r\n            )}\r\n        />\r\n    </div>\r\n}","import \"./App.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { ForceGraph3D, ForceGraph2D } from \"react-force-graph\";\r\nimport Search from \"./components/Search\";\r\nimport AssuntoFilter from \"./components/AssuntoFilter\";\r\nimport DictAssuntoFilter from \"./components/DictAssuntoFilter\";\r\n\r\nfunction Force() {\r\n    const graphRef = useRef(null);\r\n    const [nodes, setNodes] = useState([]);\r\n    const [links, setLinks] = useState([]);\r\n\r\n    const [secureLinks, setSecureLinks] = useState([])\r\n    const [secureNodes, setSecureNodes] = useState([])\r\n\r\n    const [filteredTemp, setFilteredTemp] = useState([])\r\n\r\n    const [dataShouldBeUpdated, setDataShouldBeUpdated] = useState(false);\r\n    const [assuntoFilter, setAssuntoFilter] = useState([]);\r\n    const [dictAssuntoFilter, setDictAssuntoFilter] = useState([]);\r\n\r\n    const [openFilteredResults, setOpenFilteredResults] = useState(false);\r\n    // https://raw.githubusercontent.com/RochaSamuel/data-visualization-force-graph/master/linksv2.json\r\n    // https://raw.githubusercontent.com/RochaSamuel/data-visualization-force-graph/master/nodesv2.json\r\n    useEffect(() => {\r\n        fetch(\r\n        \"conns.json\"\r\n        )\r\n        .then((data) => data.json())\r\n        .then((json) => {\r\n            setLinks(json)\r\n            setSecureLinks(json)\r\n        }, []);\r\n\r\n        fetch(\r\n        \"nodes.json\"\r\n        )\r\n        .then((data) => data.json())\r\n        .then((json) => {\r\n            setNodes(json)\r\n            setSecureNodes(json)\r\n        });\r\n    }, []);\r\n\r\n    console.log(nodes)\r\n    console.log(links)\r\n\r\n    useEffect(() => {\r\n        let filteredNodes\r\n        let filteredLinks\r\n\r\n        if(assuntoFilter.length > 0) {\r\n            filteredNodes = secureNodes.filter(node => assuntoFilter.includes(node.ASSUNTO));\r\n            filteredLinks = secureLinks.filter(link => [...filteredNodes.map(node => node.id)].includes(link.source.id) && [...filteredNodes.map(node => node.id)].includes(link.target.id))\r\n        } else {\r\n            filteredLinks = secureLinks;\r\n            filteredNodes = secureNodes;\r\n        }\r\n\r\n        if(dictAssuntoFilter.length > 0) {\r\n            filteredNodes = filteredNodes.filter(node => [...new Set([].concat.apply([], [...node.DICIONARIO.map(column => column.assunto)]))].some(n => dictAssuntoFilter.includes(n)) )\r\n            filteredLinks = filteredLinks.filter(link => [...filteredNodes.map(node => node.id)].includes(link.source.id) && [...filteredNodes.map(node => node.id)].includes(link.target.id))\r\n        }\r\n        // setNodes(filteredNodes);\r\n        // setLinks(filteredLinks);\r\n        setFilteredTemp({nodes: filteredNodes, links: filteredLinks})\r\n        setOpenFilteredResults(true);\r\n        setDataShouldBeUpdated(false);\r\n    }, [dataShouldBeUpdated])\r\n\r\n    const handleAssuntoFilter = (value) => {\r\n        setAssuntoFilter(value)\r\n        setDataShouldBeUpdated(true);\r\n    }\r\n\r\n    const handleDictAssuntoFilter = (value) => {\r\n        setDictAssuntoFilter(value)\r\n        setDataShouldBeUpdated(true);\r\n    }\r\n\r\n\r\n    const renderFilteredResults = ({nodes, links}) => {\r\n        const styles = {\r\n            container: {overflow: 'auto',borderRadius: '10px', background: '#F2F2F2', width: '300px', padding: '15px', height: '400px', position: 'absolute', zIndex: '1', top: '260px', left: '20px'},\r\n        }\r\n\r\n        return (<>\r\n            <div style={styles.container}>\r\n                {nodes.map(node => <div onClick={() => handleNodeClick(node)} style={{cursor: 'pointer', marginBottom: '6px'}}>{node.id}</div>)}\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    function renderFilterButtons({nodes, links}) {\r\n        const styles = {\r\n            container: {position: 'absolute', width: 'fit-content', left: '29px', bottom: '-12px'},\r\n            button: {cursor: 'pointer', background: 'red', color: '#fff', padding: '10px', width: 'fit-content', dsplay: 'flex', alignItems: 'center', justifyContent: 'center', fontWeigth: 'bold', borderRadius: '10px', margin: '20px auto'}\r\n        }\r\n        return <div style={styles.container}>\r\n            <div style={styles.button} onClick={() => {\r\n                setNodes(nodes);\r\n                setLinks(links);\r\n            }}>APLICAR FILTROS</div>\r\n            <div style={styles.button} onClick={() => {\r\n                setNodes(secureNodes);\r\n                setLinks(secureLinks);\r\n            }}>REVERTER</div>\r\n        </div>\r\n    }\r\n    \r\n    const handleNodeClick = (node) => {\r\n        const distance = 40;\r\n        const distRatio = 1 + distance / Math.hypot(node.x, node.y, node.z);\r\n\r\n        graphRef.current.cameraPosition(\r\n            {\r\n            x: node.x * distRatio,\r\n            y: node.y * distRatio,\r\n            z: node.z * distRatio,\r\n            }, // new position\r\n            node, // lookAt ({ x, y, z })\r\n            3000\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"Graph\">\r\n            <ForceGraph3D\r\n                ref={graphRef}\r\n                graphData={{ nodes: nodes, links: links }}\r\n                nodeLabel={\"id\"}\r\n                linkLabel={(link) => `${link.protocolo}`}\r\n                nodeAutoColorBy={\"PLATAFORMA\"}\r\n                onNodeClick={ handleNodeClick }\r\n                linkDirectionalParticles={1}\r\n                linkDirectionalParticleWidth={2}\r\n            />\r\n            {openFilteredResults && renderFilteredResults(filteredTemp)}\r\n            {openFilteredResults && renderFilterButtons(filteredTemp)}\r\n            <AssuntoFilter assuntos={[...new Set(secureNodes.map(node => node.ASSUNTO))]} applyFilter={handleAssuntoFilter}/>\r\n            <DictAssuntoFilter assuntos={['dado pessoal', 'transferencia', 'seguranca', 'dados', 'cliente']} applyFilter={handleDictAssuntoFilter}/>\r\n            {graphRef.current && <Search nodes={nodes} graphRef={graphRef}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Force;\r\n","import './App.css';\nimport Force from './Force';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Force graphType={'3D'}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}