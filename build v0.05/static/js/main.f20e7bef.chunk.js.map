{"version":3,"sources":["components/Search.js","components/AutoCompleteFilter.js","Force.js","App.js","reportWebVitals.js","index.js"],"names":["styles","container","borderRadius","background","width","padding","height","position","zIndex","top","left","Seacrh","props","style","Autocomplete","id","options","nodes","getOptionLabel","option","onInputChange","event","newInputValue","node","filter","distRatio","Math","hypot","x","y","z","graphRef","current","cameraPosition","renderInput","params","TextField","label","variant","AutoCompleteFilters","data","applyFilter","placeholder","marginBottom","multiple","size","limitTags","onChange","selectedValues","Force","useRef","useState","setNodes","links","setLinks","secureLinks","setSecureLinks","secureNodes","setSecureNodes","filteredTemp","setFilteredTemp","dataShouldBeUpdated","setDataShouldBeUpdated","assuntoFilter","setAssuntoFilter","dictAssuntoFilter","setDictAssuntoFilter","plataformaFilter","setPlataformaFilter","conjuntoFilter","setConjuntoFilter","openFilteredResults","setOpenFilteredResults","useEffect","fetch","then","json","filteredNodes","filteredLinks","length","ASSUNTO","some","n","includes","link","map","source","target","Set","concat","apply","DICIONARIO","column","assunto","PLATAFORMA","CONJUNTO","handleNodeClick","className","ref","graphData","nodeLabel","linkLabel","protocolo","nodeAutoColorBy","onNodeClick","linkDirectionalParticles","linkDirectionalParticleWidth","overflow","bottom","right","nav","display","alignItems","justifyContent","boxShadow","cursor","onClick","marginTop","renderFilteredResults","maxHeight","value","App","graphType","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.f20e7bef.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst styles = {\r\n    container: {borderRadius: '10px', background: '#F2F2F2', width: 'fit-content', padding: '15px', height: 'fit-content', position: 'absolute', zIndex: '1', top: '20px', left: '20px'},\r\n}\r\n\r\nexport default function Seacrh(props) {\r\n    return <div style={styles.container}>\r\n        <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={props.nodes}\r\n            getOptionLabel={(option) => option.id}\r\n            onInputChange={(event, newInputValue) => {\r\n                const node = props.nodes.filter((node) => node.id === newInputValue)\r\n\r\n                const distance = 40;\r\n                const distRatio = 1 + distance/Math.hypot(node[0].x, node[0].y, node[0].z);\r\n                \r\n                props.graphRef.current.cameraPosition(\r\n                    { x: node[0].x * distRatio, y: node[0].y * distRatio, z: node[0].z * distRatio }, // new position\r\n                    node[0], // lookAt ({ x, y, z })\r\n                    3000  // ms transition duration\r\n                );\r\n            }}\r\n            style={{ width: 300 }}\r\n            renderInput={(params) => <TextField {...params} label=\"ID da base\" variant=\"outlined\" />}\r\n        />\r\n    </div>\r\n}   ","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function AutoCompleteFilters({data, applyFilter, label, placeholder}) {\r\n    return <div style={{marginBottom: '20px'}}>\r\n        <Autocomplete\r\n            multiple\r\n            size='small'\r\n            limitTags={2}\r\n            id=\"multiple-limit-tags\"\r\n            options={data}\r\n            style={{ width: 300 }}\r\n            getOptionLabel={(option) => option}\r\n            onChange={(event, selectedValues) => {\r\n                applyFilter(selectedValues)\r\n            }}\r\n            renderInput={(params) => (\r\n                <TextField {...params} variant=\"outlined\" label={label} placeholder={placeholder} />\r\n            )}\r\n        />\r\n    </div>\r\n}","import \"./App.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { ForceGraph3D, ForceGraph2D } from \"react-force-graph\";\r\nimport Search from \"./components/Search\";\r\nimport AutoCompleteFilter from \"./components/AutoCompleteFilter\";\r\n\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nfunction Force() {\r\n    const graphRef = useRef(null);\r\n    const [nodes, setNodes] = useState([]);\r\n    const [links, setLinks] = useState([]);\r\n\r\n    const [secureLinks, setSecureLinks] = useState([])\r\n    const [secureNodes, setSecureNodes] = useState([])\r\n\r\n    const [filteredTemp, setFilteredTemp] = useState([])\r\n\r\n    const [dataShouldBeUpdated, setDataShouldBeUpdated] = useState(false);\r\n    const [assuntoFilter, setAssuntoFilter] = useState([]);\r\n    const [dictAssuntoFilter, setDictAssuntoFilter] = useState([]);\r\n    const [plataformaFilter, setPlataformaFilter] = useState([]);\r\n    const [conjuntoFilter, setConjuntoFilter] = useState([]);\r\n\r\n    const [openFilteredResults, setOpenFilteredResults] = useState(false);\r\n    useEffect(() => {\r\n        fetch(\r\n        \"conns.json\"\r\n        )\r\n        .then((data) => data.json())\r\n        .then((json) => {\r\n            setLinks(json)\r\n            setSecureLinks(json)\r\n        }, []);\r\n\r\n        fetch(\r\n        \"nodes.json\"\r\n        )\r\n        .then((data) => data.json())\r\n        .then((json) => {\r\n            setNodes(json)\r\n            setSecureNodes(json)\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let filteredNodes\r\n        let filteredLinks\r\n\r\n        if(assuntoFilter.length > 0) {\r\n            filteredNodes = secureNodes.filter(node => node.ASSUNTO.some(n => assuntoFilter.includes(n)));\r\n            filteredLinks = secureLinks.filter(link => [...filteredNodes.map(node => node.id)].includes(link.source.id) && [...filteredNodes.map(node => node.id)].includes(link.target.id))\r\n        } else {\r\n            filteredLinks = secureLinks;\r\n            filteredNodes = secureNodes;\r\n        }\r\n\r\n        if(dictAssuntoFilter.length > 0) {\r\n            filteredNodes = filteredNodes.filter(node => [...new Set([].concat.apply([], [...node.DICIONARIO.map(column => column.assunto)]))].some(n => dictAssuntoFilter.includes(n)) )\r\n            filteredLinks = filteredLinks.filter(link => [...filteredNodes.map(node => node.id)].includes(link.source.id) && [...filteredNodes.map(node => node.id)].includes(link.target.id))\r\n        }\r\n\r\n        if(plataformaFilter.length > 0) {\r\n            filteredNodes = filteredNodes.filter(node => plataformaFilter.includes(node.PLATAFORMA))\r\n            filteredLinks = filteredLinks.filter(link => [...filteredNodes.map(node => node.id)].includes(link.source.id) && [...filteredNodes.map(node => node.id)].includes(link.target.id))\r\n        }\r\n\r\n        if(conjuntoFilter.length > 0) {\r\n            filteredNodes = filteredNodes.filter(node => conjuntoFilter.includes(node.CONJUNTO))\r\n            filteredLinks = filteredLinks.filter(link => [...filteredNodes.map(node => node.id)].includes(link.source.id) && [...filteredNodes.map(node => node.id)].includes(link.target.id))\r\n        }\r\n\r\n        if(assuntoFilter.length > 0 || dictAssuntoFilter.length > 0 || plataformaFilter.length > 0 || conjuntoFilter.length > 0) {\r\n            setOpenFilteredResults(true);\r\n        }\r\n\r\n        setFilteredTemp({nodes: filteredNodes, links: filteredLinks})\r\n        setDataShouldBeUpdated(false);\r\n    }, [dataShouldBeUpdated])\r\n\r\n\r\n    const renderFilteredResults = ({nodes, links}) => {\r\n        const styles = {\r\n            container: {overflow: 'auto',borderRadius: '10px', background: '#F2F2F2', width: '300px', padding: '0', height: '348px', position: 'absolute', zIndex: '1', bottom: '20px', right: '20px'},\r\n            nav: {width: '270px', display: 'flex', padding:'15px', alignItems: 'center', justifyContent: 'space-between', background: '#F2F2F2', position: 'fixed', borderRadius: '10px', height: '11px', boxShadow: 'rgb(0 0 0 / 20%) 2px 1px 10px 1px'}\r\n        }\r\n\r\n        return (<>\r\n            <div style={styles.container}>\r\n                <div style={styles.nav}>\r\n                    <CloseIcon style={{cursor: 'pointer'}} onClick={() => setOpenFilteredResults(false)}/>\r\n                    <CheckIcon style={{cursor: 'pointer'}} onClick={() => {\r\n                        setNodes(nodes);\r\n                        setLinks(links);\r\n                    }}/>\r\n                    <RotateLeftIcon style={{cursor: 'pointer'}}  onClick={() => {\r\n                        setNodes(secureNodes);\r\n                        setLinks(secureLinks);\r\n                    }}/>\r\n                </div>\r\n                <div style={{marginTop: '40px'}}>\r\n                    {nodes.map(node => <div onClick={() => handleNodeClick(node)} style={{cursor: 'pointer', marginBottom: '6px'}}>{node.id}</div>)}\r\n                </div>\r\n            </div>\r\n        </>\r\n        );\r\n    }\r\n    \r\n    const handleNodeClick = (node) => {\r\n        const distance = 40;\r\n        const distRatio = 1 + distance / Math.hypot(node.x, node.y, node.z);\r\n\r\n        graphRef.current.cameraPosition(\r\n            {\r\n            x: node.x * distRatio,\r\n            y: node.y * distRatio,\r\n            z: node.z * distRatio,\r\n            }, // new position\r\n            node, // lookAt ({ x, y, z })\r\n            3000\r\n        );\r\n    }\r\n\r\n    const styles = {\r\n        container: {borderRadius: '10px', background: '#F2F2F2', width: 'fit-content', padding: '15px 15px 0 15px', height: 'fit-content', maxHeight: '80vh', position: 'absolute', zIndex: '1', top: '130px', left: '20px'},\r\n    }\r\n\r\n    return (\r\n        <div className=\"Graph\">\r\n            <ForceGraph3D\r\n                ref={graphRef}\r\n                graphData={{ nodes: nodes, links: links }}\r\n                nodeLabel={\"id\"}\r\n                linkLabel={(link) => `${link.protocolo}`}\r\n                nodeAutoColorBy={\"PLATAFORMA\"}\r\n                onNodeClick={ handleNodeClick }\r\n                linkDirectionalParticles={1}\r\n                linkDirectionalParticleWidth={2}\r\n            />\r\n            {openFilteredResults && renderFilteredResults(filteredTemp)}\r\n            <div style={styles.container}>\r\n                <AutoCompleteFilter \r\n                    data={[...new Set([...[].concat.apply([], [...nodes.map(node => node.ASSUNTO)])])]} \r\n                    applyFilter={(value) => {\r\n                        setAssuntoFilter(value);\r\n                        setDataShouldBeUpdated(true);\r\n                    }}\r\n                    label={'Assuntos'}\r\n                    placeholder={'assuntos'}\r\n                />\r\n                <AutoCompleteFilter \r\n                    data={['dado pessoal', 'transferencia', 'seguranca', 'dados', 'cliente']} \r\n                    applyFilter={(value) => {\r\n                        setDictAssuntoFilter(value);\r\n                        setDataShouldBeUpdated(true);\r\n                    }}\r\n                    label={'Assuntos das Colunas'}\r\n                    placeholder={'assuntos'}\r\n                />\r\n                <AutoCompleteFilter \r\n                    data={[...new Set(nodes.map(node => node.PLATAFORMA))]} \r\n                    applyFilter={(value) => {\r\n                        setPlataformaFilter(value);\r\n                        setDataShouldBeUpdated(true);\r\n                    }}\r\n                    label={'Plataforma'}\r\n                    placeholder={'plataforma'}\r\n                />\r\n                <AutoCompleteFilter \r\n                    data={[...new Set(nodes.map(node => node.CONJUNTO))]} \r\n                    applyFilter={(value) => {\r\n                        setConjuntoFilter(value);\r\n                        setDataShouldBeUpdated(true);\r\n                    }}\r\n                    label={'Conjunto'}\r\n                    placeholder={'conjunto'}\r\n                />\r\n            </div>\r\n            {graphRef.current && <Search nodes={nodes} graphRef={graphRef}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Force;\r\n","import './App.css';\nimport Force from './Force';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Force graphType={'3D'}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}