{"version":3,"sources":["components/Search.js","components/AutoCompleteFilter.js","components/Dictionary.js","Force.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["styles","container","borderRadius","background","width","padding","height","position","zIndex","top","left","Seacrh","props","style","Autocomplete","id","options","nodes","getOptionLabel","option","onInputChange","event","newInputValue","node","filter","distRatio","Math","hypot","x","y","z","graphRef","current","cameraPosition","renderInput","params","TextField","label","variant","AutoCompleteFilters","data","applyFilter","placeholder","marginBottom","multiple","size","limitTags","onChange","selectedValues","DialogTitle","withStyles","theme","root","margin","spacing","closeButton","right","color","palette","grey","children","classes","onClose","other","disableTypography","className","Typography","IconButton","aria-label","onClick","DialogContent","MuiDialogContent","DenseTable","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","DICIONARIO","map","item","assunto","index","Dictionary","close","open","Dialog","aria-labelledby","dividers","Force","graphType","useRef","useState","isLoading","setIsLoading","setNodes","links","setLinks","secureLinks","setSecureLinks","secureNodes","setSecureNodes","filteredTemp","setFilteredTemp","clickedNode","setClickedNode","openNodeInfo","setOpenNodeInfo","openFilteredResults","setOpenFilteredResults","openDictDialog","setOpenDictDialog","dataShouldBeUpdated","setDataShouldBeUpdated","assuntoFilter","setAssuntoFilter","dictAssuntoFilter","setDictAssuntoFilter","plataformaFilter","setPlataformaFilter","conjuntoFilter","setConjuntoFilter","useEffect","fetch","then","json","filteredNodes","filteredLinks","length","ASSUNTO","some","n","includes","link","source","target","Set","concat","apply","column","PLATAFORMA","CONJUNTO","handleNodeClick","ref","graphData","nodeLabel","linkLabel","protocolo","nodeAutoColorBy","onNodeClick","linkDirectionalParticles","linkDirectionalParticleWidth","cursor","marginTop","renderFilteredResults","CAMINHO","DESCR","maxHeight","value","Home","twoDOpen","setTwoDOpen","threeDOpen","setThreeDOpen","handleClose","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.413a6473.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst styles = {\r\n    container: {borderRadius: '10px', background: '#F2F2F2', width: 'fit-content', padding: '15px', height: 'fit-content', position: 'absolute', zIndex: '1', top: '20px', left: '20px'},\r\n}\r\n\r\nexport default function Seacrh(props) {\r\n    return <div style={styles.container}>\r\n        <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={props.nodes}\r\n            getOptionLabel={(option) => option.id}\r\n            onInputChange={(event, newInputValue) => {\r\n                const node = props.nodes.filter((node) => node.id === newInputValue)\r\n\r\n                const distance = 40;\r\n                const distRatio = 1 + distance/Math.hypot(node[0].x, node[0].y, node[0].z);\r\n                \r\n                props.graphRef.current.cameraPosition(\r\n                    { x: node[0].x * distRatio, y: node[0].y * distRatio, z: node[0].z * distRatio }, // new position\r\n                    node[0], // lookAt ({ x, y, z })\r\n                    3000  // ms transition duration\r\n                );\r\n            }}\r\n            style={{ width: 300 }}\r\n            renderInput={(params) => <TextField {...params} label=\"ID da base\" variant=\"outlined\" />}\r\n        />\r\n    </div>\r\n}   ","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default function AutoCompleteFilters({data, applyFilter, label, placeholder}) {\r\n    return <div style={{marginBottom: '20px'}}>\r\n        <Autocomplete\r\n            multiple\r\n            size='small'\r\n            limitTags={2}\r\n            id=\"multiple-limit-tags\"\r\n            options={data}\r\n            style={{ width: 300 }}\r\n            getOptionLabel={(option) => option}\r\n            onChange={(event, selectedValues) => {\r\n                applyFilter(selectedValues)\r\n            }}\r\n            renderInput={(params) => (\r\n                <TextField {...params} variant=\"outlined\" label={label} placeholder={placeholder} />\r\n            )}\r\n        />\r\n    </div>\r\n}","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n        <Typography variant=\"h6\">{children}</Typography>\r\n        {onClose ? (\r\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n            <CloseIcon />\r\n            </IconButton>\r\n        ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nfunction DenseTable(node) {\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table size=\"small\" aria-label=\"a dense table\">\r\n            <TableHead>\r\n                <TableRow>\r\n                <TableCell><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Assunto</b></TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {node.DICIONARIO.map(item => {\r\n                    return <TableRow>\r\n                        <TableCell>{item.id}</TableCell>\r\n                        <TableCell align=\"center\">{item.assunto.map((assunto, index) => item.assunto[index + 1] ? `${assunto}, ` : `${assunto}`)}</TableCell>\r\n                    </TableRow>\r\n                })}\r\n            </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        );\r\n    }\r\n\r\n\r\nexport default function Dictionary({close, open, node}) {\r\n\r\n    return (\r\n        <div>\r\n            <Dialog onClose={close} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={close}>\r\n                Dicionário de Dados\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    {DenseTable(node)}\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import \"./styles/global.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { ForceGraph3D, ForceGraph2D } from \"react-force-graph\";\r\nimport Search from \"./components/Search\";\r\nimport AutoCompleteFilter from \"./components/AutoCompleteFilter\";\r\nimport Dictionary from './components/Dictionary';\r\n\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nfunction Force({graphType, close}) {\r\n    const graphRef = useRef(null);\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [nodes, setNodes] = useState([]);\r\n    const [links, setLinks] = useState([]);\r\n\r\n    const [secureLinks, setSecureLinks] = useState([])\r\n    const [secureNodes, setSecureNodes] = useState([])\r\n\r\n    const [filteredTemp, setFilteredTemp] = useState([])\r\n    const [clickedNode, setClickedNode] = useState({})\r\n\r\n    const [openNodeInfo, setOpenNodeInfo] = useState(false)\r\n    const [openFilteredResults, setOpenFilteredResults] = useState(false);\r\n    const [openDictDialog, setOpenDictDialog] = useState(false);\r\n\r\n    const [dataShouldBeUpdated, setDataShouldBeUpdated] = useState(false);\r\n    const [assuntoFilter, setAssuntoFilter] = useState([]);\r\n    const [dictAssuntoFilter, setDictAssuntoFilter] = useState([]);\r\n    const [plataformaFilter, setPlataformaFilter] = useState([]);\r\n    const [conjuntoFilter, setConjuntoFilter] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\r\n        \"conns.json\"\r\n        )\r\n        .then((data) => data.json())\r\n        .then((json) => {\r\n            setLinks(json)\r\n            setSecureLinks(json)\r\n        }, []);\r\n\r\n        fetch(\r\n        \"nodes.json\"\r\n        )\r\n        .then((data) => data.json())\r\n        .then((json) => {\r\n            setNodes(json)\r\n            setSecureNodes(json)\r\n            setIsLoading(false)\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let filteredNodes\r\n        let filteredLinks\r\n\r\n        if(assuntoFilter.length > 0) {\r\n            filteredNodes = secureNodes.filter(node => node.ASSUNTO.some(n => assuntoFilter.includes(n)));\r\n            filteredLinks = secureLinks.filter(link => [...filteredNodes.map(node => node.id)].includes(link.source.id) && [...filteredNodes.map(node => node.id)].includes(link.target.id))\r\n        } else {\r\n            filteredLinks = secureLinks;\r\n            filteredNodes = secureNodes;\r\n        }\r\n\r\n        if(dictAssuntoFilter.length > 0) {\r\n            filteredNodes = filteredNodes.filter(node => [...new Set([].concat.apply([], [...node.DICIONARIO.map(column => column.assunto)]))].some(n => dictAssuntoFilter.includes(n)) )\r\n            filteredLinks = filteredLinks.filter(link => [...filteredNodes.map(node => node.id)].includes(link.source.id) && [...filteredNodes.map(node => node.id)].includes(link.target.id))\r\n        }\r\n\r\n        if(plataformaFilter.length > 0) {\r\n            filteredNodes = filteredNodes.filter(node => plataformaFilter.includes(node.PLATAFORMA))\r\n            filteredLinks = filteredLinks.filter(link => [...filteredNodes.map(node => node.id)].includes(link.source.id) && [...filteredNodes.map(node => node.id)].includes(link.target.id))\r\n        }\r\n\r\n        if(conjuntoFilter.length > 0) {\r\n            filteredNodes = filteredNodes.filter(node => conjuntoFilter.includes(node.CONJUNTO))\r\n            filteredLinks = filteredLinks.filter(link => [...filteredNodes.map(node => node.id)].includes(link.source.id) && [...filteredNodes.map(node => node.id)].includes(link.target.id))\r\n        }\r\n\r\n        if(assuntoFilter.length > 0 || dictAssuntoFilter.length > 0 || plataformaFilter.length > 0 || conjuntoFilter.length > 0) {\r\n            setOpenFilteredResults(true);\r\n        }\r\n\r\n        setFilteredTemp({nodes: filteredNodes, links: filteredLinks})\r\n        setDataShouldBeUpdated(false);\r\n    }, [dataShouldBeUpdated])\r\n\r\n\r\n    const renderFilteredResults = ({nodes, links}) => {\r\n\r\n        return (<>\r\n            <div className='filteredResultsContainer'>\r\n                <div className='filteredResultsNav'>\r\n                    <CloseIcon style={{cursor: 'pointer'}} onClick={() => setOpenFilteredResults(false)}/>\r\n                    <CheckIcon style={{cursor: 'pointer'}} onClick={() => {\r\n                        setNodes(nodes);\r\n                        setLinks(links);\r\n                    }}/>\r\n                    <RotateLeftIcon style={{cursor: 'pointer'}}  onClick={() => {\r\n                        setNodes(secureNodes);\r\n                        setLinks(secureLinks);\r\n                    }}/>\r\n                </div>\r\n                <div style={{marginTop: '40px'}}>\r\n                    {nodes.map(node => <div className='filteredResultsNodeId' onClick={() => handleNodeClick(node)} style={{cursor: 'pointer', marginBottom: '6px'}}>{node.id}</div>)}\r\n                </div>\r\n            </div>\r\n        </>\r\n        );\r\n    }\r\n\r\n    const renderNodeInfo = (node) => {\r\n        return <div className='nodeInfoContainer'>\r\n            <CloseIcon style={{cursor: 'pointer'}} onClick={() => setOpenNodeInfo(false)}/>\r\n            <div className='nodeInfoTitle'><b>Informações da Base: </b>{node.id}</div>\r\n            <div className='nodeInfoProp'><b>Plataforma: </b>{node.PLATAFORMA}</div>\r\n            <div className='nodeInfoProp'><b>Caminho: </b>{node.CAMINHO}</div>\r\n            <div className='nodeInfoProp'><b>Conjunto: </b>{node.CONJUNTO}</div>\r\n            <div className='nodeInfoProp'><b>Assunto: </b>{node.ASSUNTO}</div>\r\n            <div className='nodeInfoProp'><b>Dscrição: </b>{node.DESCR}</div>\r\n            <div className='nodeInfoProp'><b>Dicionário: </b><div onClick={() => setOpenDictDialog(true)} className='nodeInfoDicioLink'>Visualizar Dicionário</div></div>\r\n        </div>\r\n    }\r\n    \r\n    const handleNodeClick = (node) => {\r\n        const distance = 40;\r\n        const distRatio = 1 + distance / Math.hypot(node.x, node.y, node.z);\r\n\r\n        graphRef.current.cameraPosition(\r\n            {\r\n            x: node.x * distRatio,\r\n            y: node.y * distRatio,\r\n            z: node.z * distRatio,\r\n            }, // new position\r\n            node, // lookAt ({ x, y, z })\r\n            3000\r\n        );\r\n\r\n        setClickedNode(node);\r\n        setOpenNodeInfo(true);\r\n    }\r\n\r\n    const styles = {\r\n        container: {borderRadius: '10px', background: '#F2F2F2', width: 'fit-content', padding: '15px 15px 0 15px', height: 'fit-content', maxHeight: '80vh', position: 'absolute', zIndex: '1', top: '130px', left: '20px'},\r\n    }\r\n\r\n    return (\r\n        <div className=\"Graph\">\r\n            {graphType === '3D' ? \r\n                <>{!isLoading && <ForceGraph3D\r\n                    ref={graphRef}\r\n                    graphData={{ nodes: nodes, links: links }}\r\n                    nodeLabel={\"id\"}\r\n                    linkLabel={(link) => `${link.protocolo}`}\r\n                    nodeAutoColorBy={\"PLATAFORMA\"}\r\n                    onNodeClick={ handleNodeClick }\r\n                    linkDirectionalParticles={1}\r\n                    linkDirectionalParticleWidth={2}\r\n                />}</> :\r\n                <>{!isLoading && <ForceGraph2D\r\n                    ref={graphRef}\r\n                    graphData={{ nodes: nodes, links: links }}\r\n                    nodeLabel={\"id\"}\r\n                    linkLabel={(link) => `${link.protocolo}`}\r\n                    nodeAutoColorBy={\"PLATAFORMA\"}\r\n                />}</>\r\n            }\r\n            {openFilteredResults && renderFilteredResults(filteredTemp)}\r\n            {openNodeInfo && renderNodeInfo(clickedNode)}\r\n            {openDictDialog && <Dictionary open={openDictDialog} close={() => setOpenDictDialog(false)} node={clickedNode}/>}\r\n            <div style={styles.container}>\r\n                <AutoCompleteFilter \r\n                    data={[...new Set([...[].concat.apply([], [...nodes.map(node => node.ASSUNTO)])])]} \r\n                    applyFilter={(value) => {\r\n                        setAssuntoFilter(value);\r\n                        setDataShouldBeUpdated(true);\r\n                    }}\r\n                    label={'Assuntos'}\r\n                    placeholder={'assuntos'}\r\n                />\r\n                <AutoCompleteFilter \r\n                    data={['dado pessoal', 'transferencia', 'seguranca', 'dados', 'cliente']} \r\n                    applyFilter={(value) => {\r\n                        setDictAssuntoFilter(value);\r\n                        setDataShouldBeUpdated(true);\r\n                    }}\r\n                    label={'Assuntos das Colunas'}\r\n                    placeholder={'assuntos'}\r\n                />\r\n                <AutoCompleteFilter \r\n                    data={[...new Set(nodes.map(node => node.PLATAFORMA))]} \r\n                    applyFilter={(value) => {\r\n                        setPlataformaFilter(value);\r\n                        setDataShouldBeUpdated(true);\r\n                    }}\r\n                    label={'Plataforma'}\r\n                    placeholder={'plataforma'}\r\n                />\r\n                <AutoCompleteFilter \r\n                    data={[...new Set(nodes.map(node => node.CONJUNTO))]} \r\n                    applyFilter={(value) => {\r\n                        setConjuntoFilter(value);\r\n                        setDataShouldBeUpdated(true);\r\n                    }}\r\n                    label={'Conjunto'}\r\n                    placeholder={'conjunto'}\r\n                />\r\n            </div>\r\n            <div style={{cursor: 'pointer', position: 'absolute', top: '0', right: '0', zIndex: '9999999', width: '100px', height: '100px', background: '#f2f2f2'}} onClick={close}>Voltar</div>\r\n            {graphRef.current && <Search nodes={nodes} graphRef={graphRef}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Force;\r\n","import React, { useState } from 'react';\r\nimport Force from './Force';\r\n\r\nexport default function Home() {\r\n    const [twoDOpen, setTwoDOpen] = useState(false);\r\n    const [threeDOpen, setThreeDOpen] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setThreeDOpen(false);\r\n        setTwoDOpen(false);\r\n    }\r\n\r\n    return <>\r\n        {twoDOpen && <Force graphType=\"2D\" close={handleClose}/>}\r\n        {threeDOpen && <Force graphType=\"3D\" close={handleClose}/>}\r\n        {!twoDOpen && !threeDOpen && <><div className=\"home-title\">Escolha o modelo</div>\r\n        <button className=\"home-2dbtn\" onClick={() => setTwoDOpen(true)}>2D</button>\r\n        <button className=\"home-3dbtn\" onClick={() => setThreeDOpen(true)}>3D</button></>}\r\n    </>\r\n}","import './App.css';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}